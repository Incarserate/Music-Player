class PlayerFragment : BottomSheetDialogFragment() {
    private lateinit var binding: FragmentPlayerBinding
    private lateinit var exoPlayer: ExoPlayer

    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View {
        binding = FragmentPlayerBinding.inflate(inflater, container, false)
        return binding.root
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)
        val song = arguments?.getParcelable<Song>("song")!!

        setupPlayer(song)
        loadAlbumArt(song.albumId)
        setupControls()
    }

    private fun setupPlayer(song: Song) {
        exoPlayer = ExoPlayer.Builder(requireContext()).build()
        exoPlayer.setMediaItem(MediaItem.fromUri(getSongUri(song.id)))
        exoPlayer.prepare()
        exoPlayer.playWhenReady = true
    }

    private fun loadAlbumArt(albumId: Long) {
        val uri = ContentUris.withAppendedId(Uri.parse("content://media/external/audio/albumart"), albumId)
        
        Coil.load(requireContext(), uri).into(binding.albumArt).apply {
            val bitmap = (view.drawable as BitmapDrawable).bitmap
            Palette.from(bitmap).generate { palette ->
                val dominantColor = palette.dominantSwatch?.rgb ?: Color.BLACK
                applyDynamicColors(dominantColor)
            }
        }
    }

    private fun applyDynamicColors(@ColorInt color: Int) {
        val translucentColor = Color.argb(0.2f, Color.red(color), Color.green(color), Color.blue(color))
        binding.root.setBackgroundColor(translucentColor)
        binding.progressBar.progressTintList = ColorStateList.valueOf(color)
    }

    private fun setupControls() {
        binding.playPause.setOnClickListener {
            if (exoPlayer.isPlaying) {
                exoPlayer.pause()
                binding.playPause.setImageResource(R.drawable.ic_play)
            } else {
                exoPlayer.play()
                binding.playPause.setImageResource(R.drawable.ic_pause)
            }
        }
    }

    override fun onDestroy() {
        exoPlayer.release()
        super.onDestroy()
    }

    companion object {
        fun newInstance(song: Song) = PlayerFragment().apply {
            arguments = bundleOf("song" to song)
        }
    }
}